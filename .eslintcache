[{"/Users/avramadrian/Desktop/jbook/src/index.tsx":"1","/Users/avramadrian/Desktop/jbook/src/plugins/unpck-path-plugin.ts":"2","/Users/avramadrian/Desktop/jbook/src/plugins/fetch-plugin.ts":"3","/Users/avramadrian/Desktop/jbook/src/components/codeEditor.tsx":"4"},{"size":2310,"mtime":1689085611279,"results":"5","hashOfConfig":"6"},{"size":709,"mtime":1688835434750,"results":"7","hashOfConfig":"6"},{"size":1798,"mtime":1688844959335,"results":"8","hashOfConfig":"6"},{"size":1623,"mtime":1689087379846,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},"17xxnzm",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/avramadrian/Desktop/jbook/src/index.tsx",["20","21"],"import 'bulmaswatch/superhero/bulmaswatch.min.css';\nimport * as esbuild from \"esbuild-wasm\";\nimport { useEffect, useState, useRef } from \"react\";\nimport * as ReactDOMClient from \"react-dom/client\";\nimport { unpkgPathPlugin } from \"./plugins/unpck-path-plugin\";\nimport { fetchPlugin } from \"./plugins/fetch-plugin\";\nimport CodeEditor from \"./components/codeEditor\";\n\nconst App = () => {\n  const ref = useRef<any>();\n  const iframe = useRef<any>();\n  const [input, setInput] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n\n  const startService = async () => {\n    ref.current = await esbuild.startService({\n      worker: true,\n      wasmURL: \"https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm\",\n    });\n  };\n  useEffect(() => {\n    startService();\n  }, []);\n\n  const onClick = async () => {\n    if (!ref.current) {\n      return;\n    }\n    iframe.current.srcdoc = html;\n    const result = await ref.current.build({\n      entryPoints: [\"index.js\"],\n      bundle: true,\n      write: false,\n      plugins: [unpkgPathPlugin(), fetchPlugin(input)],\n      define: {\n        \"process.env.NODE_ENV\": '\"production\"',\n        global: \"window\",\n      },\n    });\n\n    // setCode(result.outputFiles[0].text);\n    iframe.current.contentWindow.postMessage(result.outputFiles[0].text, \"*\");\n  };\n\n  const html = `\n      <html>\n        <head></head>\n        <body>\n          <div id=\"root\"></div>\n          <script>\n            window.addEventListener('message', (event) => {\n            try{ eval(event.data);}catch(err){\n                const root=document.querySelector('#root');\n                root.innerHTML='<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>'\n            }\n            }, false);\n          </script>\n        </body>\n      </html>\n    `;\n\n  return (\n    <div>\n      <CodeEditor initialValue=\"\" onChange={(value)=>setInput(value)} />\n      <textarea\n        value={input}\n        onChange={(e) => setInput(e.target.value)}></textarea>\n      <div>\n        <button  onClick={onClick}>Submit</button>\n      </div>\n      <iframe\n        title=\"Preview\"\n        ref={iframe}\n        sandbox=\"allow-scripts\"\n        srcDoc={html}\n      />\n    </div>\n  );\n};\n\nconst root = document.querySelector(\"#root\");\n\nif (root instanceof Element) {\n  ReactDOMClient.createRoot(root).render(<App />);\n}\n",["22","23"],"/Users/avramadrian/Desktop/jbook/src/plugins/unpck-path-plugin.ts",[],"/Users/avramadrian/Desktop/jbook/src/plugins/fetch-plugin.ts",[],"/Users/avramadrian/Desktop/jbook/src/components/codeEditor.tsx",[],{"ruleId":"24","severity":1,"message":"25","line":13,"column":10,"nodeType":"26","messageId":"27","endLine":13,"endColumn":14},{"ruleId":"24","severity":1,"message":"28","line":13,"column":16,"nodeType":"26","messageId":"27","endLine":13,"endColumn":23},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},"@typescript-eslint/no-unused-vars","'code' is assigned a value but never used.","Identifier","unusedVar","'setCode' is assigned a value but never used.","no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-global-assign","no-unsafe-negation"]